@using DATN.Application.Dtos.UserDtos
@using DATN.Application.Dtos.RoleDtos
@model List<UserDetailDto>

@{
	ViewData["Title"] = "Quản lý Người Dùng";
	Layout = "~/Views/Shared/_SystemAdminLayout.cshtml";
}

@if (TempData["Message"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		@TempData["Message"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

<div class="container-fluid p-3">
	<div class="d-flex justify-content-center align-items-center">
		<h1 class="h3 mb-4 text-primary fw-bold">Quản lý Người Dùng</h1>
	</div>

	@if (Model != null && Model.Any())
	{
		<div class="table-responsive">
			<table class="table table-hover table-bordered w-100">
				<thead class="table-dark text-white text-center">
					<tr>
						<th>Họ và tên</th>
						<th>Email</th>
						<th>Ngày sinh</th>
						<th>Số đóng góp</th>
						<th>Vai trò</th>
						<th>Ngày tạo</th>
						<th>Ngày cập nhật</th>
						<th>Trạng thái</th>
						<th>Hành động</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var user in Model)
					{
						<tr>
							<td class="fw-bold">@user.FullName</td>
							<td>@user.Email</td>
							<td class="text-center">@user.DateOfBirth.ToString("dd/MM/yyyy")</td>
							<td class="text-center">@user.NumberOfContributions</td>
							<td class="text-center">@user.RoleName</td>
							<td class="text-center">@user.CreatedDate.ToString("dd/MM/yyyy HH:mm")</td>
							<td class="text-center">@user.UpdatedDate.ToString("dd/MM/yyyy HH:mm")</td>
							<td class="text-center">
								<span class="badge @(user.IsActive ? "bg-success" : "bg-danger")" id="status-@user.Email">
									@(user.IsActive ? "Hoạt động" : "Bị khóa")
								</span>
							</td>
							<!-- Thay thế phần trong <td class="text-center"> bên trong foreach -->
							<td class="text-center">
								<div class="d-flex justify-content-center gap-2">
									@{
										var userJson = System.Text.Json.JsonSerializer.Serialize(user);
										var roles = ViewData["Roles"] as IEnumerable<RoleDto>;
									}
									@if (user.Email.ToLower() != "admin@gmail.com") // Điều kiện tạm thời
									{
										<!-- Nút Đổi Trạng Thái (Khóa/Mở) -->
										<button class="btn btn-sm @(user.IsActive ? "btn-danger" : "btn-success") btn-toggle-status"
												data-user='@Html.Raw(Json.Serialize(user))'>
											<i class="fas @(user.IsActive ? "fa-lock" : "fa-unlock")"></i> @(user.IsActive ? "Khóa" : "Mở khóa")
										</button>



										<div class="dropdown">
											<button class="btn btn-sm btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
												<i class="fas fa-user-cog"></i> Đổi vai trò
											</button>
											<ul class="dropdown-menu">
												@foreach (var role in roles)
												{
													if (role.RoleName != user.RoleName) // Chỉ hiển thị nếu khác vai trò hiện tại
													{
														<li>
															<a class="dropdown-item btn-change-role"
															   href="#"
															   data-email="@user.Email"
															   data-role="@role.RoleName"
															   data-role-id="@role.Id">
																@role.RoleName
															</a>
														</li>
													}
												}
											</ul>
										</div>

									}
								</div>
							</td>

						</tr>
					}
				</tbody>
			</table>
		</div>
	}
	else
	{
		<p class="text-center text-muted">Không có người dùng nào.</p>
	}
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			document.querySelectorAll(".btn-toggle-status").forEach(button => {
				button.addEventListener("click", function () {
					let user = JSON.parse(this.getAttribute("data-user"));
					let buttonElement = this;

					Swal.fire({
						title: "Xác nhận",
						text: "Bạn có chắc chắn muốn thay đổi trạng thái tài khoản này?",
						icon: "warning",
						showCancelButton: true,
						confirmButtonColor: "#d33",
						cancelButtonColor: "#3085d6",
						confirmButtonText: "Đồng ý",
						cancelButtonText: "Hủy"
					}).then((result) => {
						if (result.isConfirmed) {

							fetch("@Url.Action("UpdateLockUser", "SystemAdmin")", {
								method: "POST",
								headers: { "Content-Type": "application/json" },
								body: JSON.stringify(user)
							})
								.then(response => response.json())
								.then(data => {
									if (data.success) {
										Swal.fire({
											title: "Thành công!",
											text: data.message,
											icon: "success"
										}).then(() => {
											location.reload();
										});
									} else {
										Swal.fire("Lỗi!", data.message || "Có lỗi xảy ra.", "error");
									}
								})
								.catch(error => Swal.fire("Lỗi!", "Có lỗi xảy ra.", "error"));
						}
					});
				});
			});
		});
	</script>


	<script>
		document.querySelectorAll(".btn-change-role").forEach(link => {
			link.addEventListener("click", function (e) {
				e.preventDefault();
				let email = this.getAttribute("data-email");
				let newRole = this.getAttribute("data-role");
				let newRoleId = parseInt(this.getAttribute("data-role-id"));

				let userButton = document.querySelector(`.btn-toggle-status[data-user*='"${email}"']`);
				if (!userButton) {
					Swal.fire("Lỗi!", "Không tìm thấy dữ liệu người dùng.", "error");
					return;
				}

				let user = JSON.parse(userButton.getAttribute("data-user"));
				let updatedUser = { ...user, roleName: newRole, roleId: newRoleId };

				Swal.fire({
					title: "Xác nhận",
					text: `Bạn có chắc muốn đổi vai trò người dùng ${email} thành ${newRole}?`,
					icon: "question",
					showCancelButton: true,
					confirmButtonColor: "#3085d6",
					cancelButtonColor: "#d33",
					confirmButtonText: "Đồng ý",
					cancelButtonText: "Hủy"
				}).then((result) => {
					if (result.isConfirmed) {
						fetch("@Url.Action("ChangeUserRole", "SystemAdmin")", {
							method: "POST",
							headers: {
								"Content-Type": "application/json"
							},
							body: JSON.stringify(updatedUser)
						})
							.then(response => response.json())
							.then(data => {
								if (data.success) {
									Swal.fire("Thành công!", data.message, "success")
										.then(() => location.reload());
								} else {
									Swal.fire("Lỗi!", data.message || "Đổi vai trò thất bại.", "error");
								}
							})
							.catch(error => Swal.fire("Lỗi!", "Có lỗi khi gửi yêu cầu.", "error"));
					}
				});
			});
		});

	</script>


}
